/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function (obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"); // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  define(Gp, toStringTagSymbol, \"Generator\"); // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function (skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function () {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function (exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function (type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function (record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function (finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function (tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\n true ? module.exports : 0);\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n\n//# sourceURL=webpack://romantik/./node_modules/regenerator-runtime/runtime.js?");

/***/ }),

/***/ "./src/client/js/main.js":
/*!*******************************!*\
  !*** ./src/client/js/main.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony import */ var _scss_styles_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scss/styles.scss */ \"./src/client/scss/styles.scss\");\n/* harmony import */ var _scss_search_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scss/search.scss */ \"./src/client/scss/search.scss\");\n/* harmony import */ var _scss_player_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scss/player.scss */ \"./src/client/scss/player.scss\");\n/* harmony import */ var _scss_library_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scss/library.scss */ \"./src/client/scss/library.scss\");\n/* harmony import */ var _scss_playlist_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../scss/playlist.scss */ \"./src/client/scss/playlist.scss\");\n/* harmony import */ var _scss_profile_scss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../scss/profile.scss */ \"./src/client/scss/profile.scss\");\n/* harmony import */ var regenerator_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n/* harmony import */ var regenerator_runtime__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n\n\n\nconst player = document.querySelector(\".player\");\nconst random = document.querySelector(\".player .random\");\nconst repeat = document.querySelector(\".player .repeat\");\nconst next = document.querySelector(\".player .next\");\nconst previous = document.querySelector(\".player .previous\");\nconst body = document.querySelector(\"body\");\nconst currentPlaylistDisplay = document.querySelector(\".current-playlist\");\nconst playerHeader = document.querySelector(\".player-header\");\nconst bottomIcons = document.querySelector(\".bottom-icons\");\nconst viewPlaylist = document.querySelectorAll(\".view-playlist\");\nconst playlistClose = document.querySelector(\".current-playlist .player-header img\");\nconst nowPlaying = document.querySelector(\".now-playing\");\nconst progressBar = document.querySelector(\".progress-bar\");\nconst passed = progressBar.querySelector(\".passed\");\nconst total = progressBar.querySelector(\".total\");\nconst bar = progressBar.querySelector(\".bar\");\nlet duration = 0;\nconst playlistWrapper = document.querySelector('.current-playlist-wrapper');\nconst navAnchor = document.querySelectorAll(\"nav ul a\");\nconst logoutButton = document.querySelector(\"button.logout\");\nconst likeButton = document.querySelectorAll(\".like\");\nlet liked = false;\nconst mobileLikeButton = document.querySelector(\".like-wrap.mobile.open\");\nconst playlistTitleWrapper = document.querySelector(\".library-title.add\");\nconst playlistTitle = document.querySelector(\".library-title.add span\");\nconst playlistInput = document.querySelector(\".library-title.add input\");\nconst createBtn = document.querySelector(\".createBtn\");\nconst playlistForm = document.querySelector(\"#playlistForm\");\nconst searchForm = document.querySelector(\"#searchForm\");\nconst addToLibraryButton = document.querySelectorAll(\".add-to-library\");\nconst viewLibrary = document.querySelector(\".view-library\");\nconst editBtn = document.querySelector(\".edit-library\");\nconst libraryCovers = document.querySelectorAll(\"#library .cover-wrapper\");\nconst deleteBtns = document.querySelectorAll(\".deleteBtn\");\nlet isEditMode = false;\nconst playerClose = document.querySelector(\".player-header img\");\nconst playButton = document.querySelectorAll(\".play\");\nvar tag = document.createElement('script');\nlet loggedIn = false;\nnowPlaying.addEventListener(\"click\", () => {\n  if (window.innerWidth < 600) {\n    player.classList.add(\"open\");\n    mobileLikeButton.classList.remove(\"hidden\");\n    body.classList.add(\"not-overflowY\");\n    playerHeader.classList.remove(\"hidden\");\n    bottomIcons.classList.remove(\"hidden\");\n  }\n});\n\nfunction deleteCurrentPlaylist(event) {\n  const work = event.target;\n  const indexNumber = work.classList[0];\n  currentPlaylist.splice(indexNumber, 1);\n  updateCurrentPlaylistScreen();\n}\n\nviewPlaylist.forEach(btn => {\n  btn.addEventListener(\"click\", () => {\n    bottomIcons.classList.add('hidden');\n    body.classList.toggle(\"not-overflowY\");\n    currentPlaylistDisplay.classList.toggle(\"hidden\");\n    updateCurrentPlaylistScreen();\n  });\n});\nplaylistClose.addEventListener(\"click\", () => {\n  body.classList.remove(\"not-overflowY\");\n  currentPlaylistDisplay.classList.add(\"hidden\");\n  bottomIcons.classList.remove(\"hidden\");\n});\nplayerClose.addEventListener(\"click\", event => {\n  event.stopPropagation();\n  player.classList.remove(\"open\");\n  mobileLikeButton.classList.add(\"hidden\");\n  body.classList.remove(\"not-overflowY\");\n  playerHeader.classList.add(\"hidden\");\n  bottomIcons.classList.add(\"hidden\");\n  viewLibrary.classList.add(\"hidden\");\n  playlistTitle.classList.remove(\"hidden\");\n  playlistInput.classList.add(\"hidden\");\n  createBtn.classList.add(\"hidden\");\n  playlistInput.value = \"\";\n});\nwindow.addEventListener(\"resize\", () => {\n  if (window.innerWidth >= 600) {\n    if (player.classList.contains(\"open\")) {\n      player.classList.remove(\"open\");\n      playerHeader.classList.add(\"hidden\");\n      bottomIcons.classList.add(\"hidden\");\n      mobileLikeButton.classList.add(\"hidden\");\n    }\n  }\n\n  if (window.innerWidth < 600) {\n    const bottomIconsMobile = document.querySelector(\".bottom-icons.mobile\");\n\n    if (!player.classList.contains(\"open\")) {\n      bottomIconsMobile.classList.add(\"hidden\");\n    }\n\n    if (!currentPlaylistDisplay.classList.contains(\"hidden\")) {\n      currentPlaylistDisplay.classList.add(\"hidden\");\n    }\n  }\n});\n\nwindow.loginAlert = () => {\n  if (!loggedIn) {\n    alert(\"Please sign in\");\n  }\n};\n\nfunction changeNav() {\n  let currentPath = location.pathname;\n  navAnchor.forEach(anchor => {\n    anchor.classList.remove('active');\n  });\n\n  if (currentPath !== \"/profile\") {\n    let menuItem = document.querySelector('[href=\"' + currentPath + '\"]');\n\n    if (currentPath == '/') {\n      menuItem = document.querySelector('nav ul a:first-of-type');\n    }\n\n    if (menuItem) {\n      menuItem.classList.add('active');\n    }\n  }\n}\n\nchangeNav();\ntag.src = \"https://www.youtube.com/iframe_api\";\nvar firstScriptTag = document.getElementsByTagName('script')[0];\nfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\nvar iframePlayer;\n\nwindow.onYouTubeIframeAPIReady = () => {\n  iframePlayer = new YT.Player('player', {\n    height: '0',\n    width: '0',\n    host: 'https://www.youtube-nocookie.com',\n    playerVars: {\n      playlist: currentPlaylist.map(item => item.videoId).join(',')\n    },\n    events: {\n      'onReady': onPlayerReady,\n      'onStateChange': onPlayerStateChange\n    }\n  });\n};\n\nconst currentTitle = document.querySelector(\".player .info .title span\");\nconst currentPerformer = document.querySelector(\".player .info .performer span\");\nconst currentComposer = document.querySelector(\".player .info .composer span\");\nconst currentCover = document.querySelector(\".player .cover-wrapper\");\nlet currentIndex = -1;\nlet playing = 'none';\nlet currentVideoId = 'none';\n\nwindow.updateNowPlaying = () => {\n  currentIndex = currentPlaylist.length - 1;\n  playPlayer();\n  playPause();\n};\n\nwindow.playInPlaylist = index => {\n  currentIndex = index;\n  playPlayer();\n};\n\nfunction playPlayer() {\n  playing = currentPlaylist[currentIndex];\n  currentVideoId = playing.videoId;\n  checkLiked();\n  iframePlayer.loadVideoById(currentVideoId);\n  updateCurrentCover();\n  currentCover.style.backgroundImage = `url(${playing.thumbnail})`;\n  currentTitle.textContent = playing.title;\n  currentPerformer.textContent = playing.performer;\n  currentComposer.textContent = playing.composer;\n  isPlaying = true;\n}\n\nconst currentPlaylistList = playlistWrapper.querySelectorAll(\"div\");\ncurrentPlaylistList.forEach(list => {\n  list.addEventListener(\"click\", () => {\n    const index = list.className;\n    inPlaylistPlay(index);\n  });\n});\n\nfunction inPlaylistPlay(index) {\n  currentIndex = index;\n  playPlayer();\n}\n\nlet isPlaying = undefined;\n\nfunction playPause() {\n  if (isPlaying) {\n    playButton.forEach(btn => {\n      btn.className = \"pause\";\n      btn.src = \"/public/icons/pause.svg\";\n    });\n  } else if (!isPlaying) {\n    playButton.forEach(btn => {\n      btn.className = \"play\";\n      btn.src = \"/public/icons/play.svg\";\n    });\n  }\n}\n\nfunction onPlayerReady(event) {\n  playButton.forEach(btn => {\n    btn.addEventListener('click', () => {\n      if (isPlaying !== undefined) {\n        iframePlayer.playVideo();\n        isPlaying = !isPlaying;\n\n        if (isPlaying) {\n          iframePlayer.playVideo();\n        } else {\n          iframePlayer.pauseVideo();\n        }\n\n        playPause();\n      }\n    });\n  });\n}\n\nlet repeatMode = 'none';\nrepeat.addEventListener(\"click\", () => {\n  if (repeatMode === 'none') {\n    repeatMode = true;\n  } else if (repeatMode === true) {\n    repeatMode = 'playlistRepeat';\n  } else if (repeatMode === 'playlistRepeat') {\n    repeatMode = 'none';\n  }\n\n  if (repeatMode === true) {\n    repeat.src = \"/public/icons/repeat_one.svg\";\n  } else if (repeatMode === 'playlistRepeat') {\n    repeat.src = \"/public/icons/repeat_active.svg\";\n  } else {\n    repeat.src = \"/public/icons/repeat_inactive.svg\";\n  }\n});\nsetInterval(progressBarAutomaticUpdate, 1000);\n\nfunction onPlayerStateChange(event) {\n  if (event.data == YT.PlayerState.PLAYING && loggedIn !== true) {\n    duration = \"1:00\";\n    total.textContent = duration;\n    setTimeout(stopVideo, 60000);\n  } else if (event.data == YT.PlayerState.PLAYING) {\n    duration = iframePlayer.getDuration();\n    let minutes = Math.floor(duration / 60);\n    const seconds = Math.floor(duration - 60 * Math.floor(duration / 60));\n\n    if (minutes >= 60) {\n      const hours = Math.floor(minutes / 60);\n      minutes = minutes - hours * 60;\n      duration = `${hours}:${minutes}:${seconds}`;\n    } else {\n      if (seconds < 10) {\n        duration = `${minutes}:0${seconds}`;\n      } else {\n        duration = `${minutes}:${seconds}`;\n      }\n    }\n\n    total.textContent = duration;\n  } else {\n    if (event.data === YT.PlayerState.ENDED) {\n      if (repeatMode === true) {\n        iframePlayer.playVideo();\n      } else if (repeatMode === 'playlistRepeat') {\n        playNextVideo();\n      } else if (repeatMode === 'none') {\n        if (currentIndex < currentPlaylist.length - 1) {\n          playNextVideo();\n        }\n      }\n    }\n\n    if (event.data === YT.PlayerState.PLAYING) {}\n  }\n}\n\n;\nlet shuffled = false;\nrandom.addEventListener(\"click\", () => {\n  if (!shuffled) {\n    shuffled = true;\n    random.src = '/public/icons/random_active.svg';\n  } else {\n    shuffled = false;\n    random.src = '/public/icons/random_inactive.svg';\n  }\n});\nlet previousIndex = 0;\n\nfunction playNextVideo() {\n  previousIndex = currentIndex;\n\n  if (!shuffled) {\n    if (currentIndex == currentPlaylist.length - 1) {\n      if (repeatMode === \"playlistRepeat\") {\n        currentIndex = 0;\n      } else {\n        currentIndex = 0;\n      }\n    } else {\n      currentIndex += 1;\n    }\n  } else {\n    do {\n      currentIndex = Math.floor(Math.random() * (currentPlaylist.length - 1));\n    } while (currentIndex === previousIndex);\n  }\n\n  if (currentPlaylist !== []) {\n    playPlayer();\n  }\n}\n\nfunction playPreviousVideo() {\n  if (!shuffled) {\n    if (currentIndex != 0) {\n      currentIndex -= 1;\n    } else {}\n  } else {\n    currentIndex = previousIndex;\n  }\n\n  if (currentPlaylist !== []) {\n    playPlayer();\n  }\n}\n\nfunction stopVideo() {\n  isPlaying = !isPlaying;\n  iframePlayer.stopVideo();\n  playPause();\n}\n\n;\nnext.addEventListener(\"click\", playNextVideo);\nprevious.addEventListener(\"click\", playPreviousVideo);\nlet currentPlaylist = [];\n\nwindow.addPlaylist = (videoId, title, performer, composer, thumbnail) => {\n  const added = {\n    videoId: videoId,\n    title: title,\n    performer: performer,\n    composer: composer,\n    thumbnail: thumbnail\n  };\n  currentCoverUrl = thumbnail;\n  const existingIndex = currentPlaylist.findIndex(item => item.videoId === videoId);\n\n  if (existingIndex !== -1) {\n    currentPlaylist.splice(existingIndex, 1);\n  }\n\n  currentPlaylist.push(added);\n  addSongHistory(videoId);\n  createPlaylistElement(title, performer, thumbnail);\n};\n\nwindow.queueAlarm = () => {\n  const message = document.querySelector(\".added-notification\");\n  message.classList.remove(\"hidden\");\n  setTimeout(function () {\n    message.classList.add(\"hidden\");\n  }, 2000);\n};\n\nfunction playlistAlarm() {\n  const message = document.querySelector(\".added-to-playlist-notification\");\n  message.classList.remove(\"hidden\");\n  setTimeout(function () {\n    message.classList.add(\"hidden\");\n  }, 2000);\n}\n\nfunction createPlaylistElement(addedTitle, addedPerformer, addedCover, i) {\n  const newElement = document.createElement('div');\n  newElement.classList.add('element');\n  const coverWrapper = document.createElement('div');\n  coverWrapper.classList.add('cover-wrapper');\n  coverWrapper.style.backgroundImage = `url(${addedCover})`;\n  coverWrapper.setAttribute('onclick', `playInPlaylist(${i})`);\n  const info = document.createElement('div');\n  info.classList.add('info');\n  const title = document.createElement('div');\n  title.classList.add('title');\n  title.textContent = addedTitle;\n  const performer = document.createElement('div');\n  performer.classList.add('performer');\n  performer.textContent = addedPerformer;\n  const drag = document.createElement('div');\n  drag.classList.add('drag');\n  const deletePlaylistBtn = document.createElement('img');\n  deletePlaylistBtn.src = '/public/icons/close.svg';\n  deletePlaylistBtn.classList.add(\"delete-playlist\");\n  deletePlaylistBtn.onclick = deleteCurrentPlaylist;\n  drag.appendChild(deletePlaylistBtn);\n  info.appendChild(title);\n  info.appendChild(performer);\n  newElement.appendChild(coverWrapper);\n  newElement.appendChild(info);\n  newElement.appendChild(drag);\n  newElement.className = i;\n  playlistWrapper.appendChild(newElement);\n}\n\nfunction updateCurrentPlaylistScreen() {\n  playlistWrapper.innerHTML = \"\";\n  let i = 0;\n  currentPlaylist.forEach(list => {\n    createPlaylistElement(list.title, list.performer, list.thumbnail, i);\n    i++;\n  });\n}\n\nlet percentage = 0;\n\nfunction progressBarAutomaticUpdate() {\n  if (isPlaying) {\n    let minutes = Math.floor(iframePlayer.getCurrentTime() / 60);\n    let seconds = Math.trunc(iframePlayer.getCurrentTime() - minutes * 60);\n\n    if (loggedIn === true) {\n      percentage = Math.floor(iframePlayer.getCurrentTime()) / Math.floor(iframePlayer.getDuration()) * 100;\n    } else if (loggedIn === undefined || loggedIn === false) {\n      percentage = Math.floor(iframePlayer.getCurrentTime()) / 60 * 100;\n\n      if (iframePlayer.getCurrentTime() >= 60) {\n        stopVideo();\n      }\n    }\n\n    if (seconds == 0) {\n      seconds = '00';\n    } else if (seconds < 10) {\n      seconds = `0${seconds}`;\n    }\n\n    passed.textContent = `${minutes}:${seconds}`;\n    bar.style.setProperty('--after-width', `${percentage}%`);\n  }\n}\n\nfunction updateProgressBar(event) {\n  const clickedX = event.clientX - bar.getBoundingClientRect().left;\n  const barWidth = bar.clientWidth;\n  const progress = clickedX / barWidth * 100;\n\n  if (loggedIn === true) {\n    iframePlayer.seekTo(iframePlayer.getDuration() * (progress * 0.01));\n  } else {\n    iframePlayer.seekTo(60 * (progress * 0.01));\n  }\n\n  bar.style.setProperty('--after-width', `${progress}%`);\n}\n\nbar.addEventListener('click', updateProgressBar);\nlet currentCoverUrl = \"\";\n\nfunction updateCurrentCover() {\n  const covers = document.querySelectorAll(\".player .cover-wrapper\");\n  covers.forEach(cover => {\n    cover.style.backgroundImage = `url(${currentCoverUrl})`;\n  });\n} // soundbar \n\n\nconst soundbarContainer = document.querySelector(\".soundbar-container\");\nconst soundbarWrapper = document.querySelector('.soundbar-wrapper');\nconst soundbar = document.querySelector('.soundbar');\nconst soundHeightVariable = '--sound-height';\nlet isDragging = false;\nsoundbarWrapper.addEventListener('mousedown', startDrag);\nsoundbarWrapper.addEventListener('touchstart', startDrag);\ndocument.addEventListener('mousemove', handleDrag);\ndocument.addEventListener('touchmove', handleDrag);\ndocument.addEventListener('mouseup', stopDrag);\ndocument.addEventListener('touchend', stopDrag);\n\nfunction startDrag(event) {\n  isDragging = true;\n  event.preventDefault();\n  updateSoundHeight(event);\n}\n\nfunction handleDrag(event) {\n  if (isDragging) {\n    event.preventDefault();\n    updateSoundHeight(event);\n    showSoundbar();\n  }\n}\n\nfunction stopDrag() {\n  isDragging = false;\n}\n\nconst soundIcon = document.querySelector('.sound');\nlet newSoundHeight = 0;\n\nfunction updateSoundHeight(event) {\n  const soundbarHeight = soundbarWrapper.offsetHeight;\n  const rect = soundbarWrapper.getBoundingClientRect();\n  const offsetY = event.clientY;\n  let relativeY = rect.bottom - offsetY;\n  const clampedRelativeY = Math.max(0, Math.min(relativeY, soundbarHeight));\n  let percentage = clampedRelativeY / soundbarHeight * 100;\n  newSoundHeight = `${Math.floor(relativeY)}px`;\n\n  if (!isMuted) {\n    if (Math.floor(relativeY) > 60) {\n      newSoundHeight = '60px';\n    }\n  }\n\n  soundbar.style.setProperty(soundHeightVariable, newSoundHeight);\n  const volume = percentage;\n  iframePlayer.setVolume(volume);\n}\n\nlet isMuted = false;\nlet previousVolume = 0;\nsoundIcon.addEventListener(\"click\", event => {\n  let previousHeight = newSoundHeight;\n\n  if (!isMuted) {\n    isMuted = true;\n    soundIcon.src = \"/public/icons/mute.svg\";\n    previousVolume = iframePlayer.getVolume();\n    iframePlayer.setVolume(0);\n    soundbar.style.setProperty(soundHeightVariable, 0);\n  } else {\n    soundIcon.src = \"/public/icons/sound.svg\";\n    iframePlayer.setVolume(previousVolume);\n    soundbar.style.setProperty(soundHeightVariable, previousHeight);\n  }\n});\n\nfunction showSoundbar() {\n  soundbarContainer.style.height = '100px';\n  soundbarContainer.style.backgroundColor = 'rgba(255, 255, 255, 0.3)';\n  soundbarContainer.style.marginBottom = '73px';\n  soundbarWrapper.style.display = \"flex\";\n}\n\nfunction hideSoundbar() {\n  soundbarContainer.style.height = '27px';\n  soundbarContainer.style.backgroundColor = 'transparent';\n  soundbarContainer.style.marginBottom = '0';\n  soundbarWrapper.style.display = \"none\";\n}\n\nsoundbarContainer.addEventListener(\"mouseover\", showSoundbar);\nsoundbarContainer.addEventListener(\"mouseleave\", hideSoundbar); // main tag update \n\nwindow.navigateToPage = url => {\n  fetch(url).then(response => response.text()).then(html => {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, \"text/html\");\n    const newMainContent = doc.querySelector(\"main\");\n    const newHeaderContent = doc.querySelector(\"header\");\n    const currentMain = document.querySelector(\"main\");\n    const currentHeader = document.querySelector(\"header\");\n    currentMain.innerHTML = \"\";\n    currentHeader.innerHTML = \"\";\n    currentMain.innerHTML = newMainContent.innerHTML;\n    currentHeader.innerHTML = newHeaderContent.innerHTML;\n    changeNav();\n  }).catch(error => {\n    console.error(error);\n  });\n};\n\nwindow.enterLibrary = (event, url) => {\n  const mainContent = document.querySelector(\"main\");\n  event.preventDefault();\n  navigateToPage(url);\n  window.history.pushState({}, \"\", url);\n};\n\nnavAnchor.forEach(anchor => {\n  currentPlaylistDisplay.classList.add(\"hidden\");\n  anchor.addEventListener(\"click\", event => {\n    const mainContent = document.querySelector(\"main\");\n    event.preventDefault();\n    const url = anchor.getAttribute(\"href\");\n    navigateToPage(url);\n    window.history.pushState({}, \"\", url);\n  });\n});\nconst logo = document.querySelector(\".logo\");\nlogo.addEventListener(\"click\", event => {\n  const mainContent = document.querySelector(\"main\");\n  event.preventDefault();\n  const url = \"/\";\n  navigateToPage(url);\n  window.history.pushState({}, \"\", url);\n});\n\nwindow.profileBtn = event => {\n  event.preventDefault();\n  const url = \"/profile\";\n  fetch(url).then(response => response.text()).then(html => {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, \"text/html\");\n    const mainContent = doc.querySelector(\"main\").innerHTML;\n    const headerContent = doc.querySelector(\"header\").innerHTML;\n    const docMain = document.querySelector(\"main\");\n    const docHeader = document.querySelector(\"header\");\n    docHeader.innerHTML = headerContent;\n    docMain.innerHTML = mainContent;\n    changeNav();\n  }).catch(error => {\n    console.error(error);\n  });\n  window.history.pushState({}, \"\", url);\n};\n\nwindow.addEventListener(\"popstate\", () => {\n  const url = window.location.href;\n  navigateToPage(url);\n});\n\nwindow.signOut = async () => {\n  try {\n    await fetch('/logout', {\n      method: 'POST'\n    });\n    addPlaylistHistory();\n    location.reload();\n  } catch (error) {\n    console.error('Failed to logout:', error);\n  }\n};\n\nfunction checkLogin() {\n  return new Promise((resolve, reject) => {\n    fetch('/getLoginStatus').then(response => response.json()).then(data => {\n      loggedIn = data.loggedIn;\n      resolve();\n    }).catch(error => {\n      console.error(error);\n      reject(error);\n    });\n  });\n}\n\nwindow.onload = () => {\n  checkLogin().then(() => {// console.log(loggedIn);\n  });\n};\n\nfunction addSongHistory(videoId) {\n  fetch('/addSongToHistory', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      videoId\n    })\n  }).then(response => {\n    if (response.ok) {// console.log('Song added to history successfully');\n    } else {\n      console.error('Failed to add song to history');\n    }\n  }).catch(error => {\n    console.error(error);\n  });\n}\n\nfunction addPlaylistHistory() {\n  const playlist = Object.values(currentPlaylist).map(song => song.videoId);\n  fetch('/addPlaylistToHistory', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      playlist\n    })\n  }).then(response => {\n    if (response.ok) {// console.log('playlist added to history successfully');\n    } else {\n      console.error('Failed to add playlist to history');\n    }\n  }).catch(error => {\n    console.error(error);\n  });\n}\n\nconst searchInput = document.querySelector(\"input[name='keyword']\");\n\nwindow.moveCursorToEnd = inputElement => {\n  inputElement.focus();\n  inputElement.setSelectionRange(inputElement.value.length, inputElement.value.length);\n};\n\nwindow.searchUpdate = event => {\n  let keyword = event.target.value;\n  let url = `/search?keyword=${encodeURIComponent(keyword)}`;\n\n  if (keyword == \"\") {\n    url = \"/search\";\n  }\n\n  fetch(url).then(response => response.text()).then(html => {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, \"text/html\");\n    const newMainContent = doc.querySelector(\"main\");\n    const currentMain = document.querySelector(\"main\");\n    currentMain.innerHTML = \"\";\n    currentMain.innerHTML = newMainContent.innerHTML; // searchInput.focus();\n    // moveCursorToEnd(searchInput);\n  }).catch(error => {\n    console.error(error);\n  });\n};\n\nwindow.searchCategory = name => {\n  fetch(`/search?keyword=${name}`).then(response => response.text()).then(html => {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, \"text/html\");\n    const newMainContent = doc.querySelector(\"main\");\n    const newHeaderContent = doc.querySelector(\"header\");\n    const currentMain = document.querySelector(\"main\");\n    const currentHeader = document.querySelector(\"header\");\n    currentMain.innerHTML = \"\";\n    currentHeader.innerHTML = \"\";\n    currentMain.innerHTML = newMainContent.innerHTML;\n    currentHeader.innerHTML = newHeaderContent.innerHTML;\n  }).catch(error => {\n    console.error(error);\n  });\n};\n\nfunction updateLikedButton(liked) {\n  likeButton.forEach(btn => {\n    if (liked) {\n      btn.src = \"/public/icons/heart.svg\";\n      btn.classList.remove(\"inactive\");\n      btn.classList.add(\"active\");\n    } else {\n      btn.src = \"/public/icons/heart_inactive.svg\";\n      btn.classList.remove(\"active\");\n      btn.classList.add(\"inactive\");\n    }\n\n    likeButton.forEach(otherBtn => {\n      if (otherBtn !== btn) {\n        otherBtn.classList.toggle(\"inactive\", !liked);\n        otherBtn.classList.toggle(\"active\", liked);\n        otherBtn.src = liked ? \"/public/icons/heart.svg\" : \"/public/icons/heart_inactive.svg\";\n      }\n    });\n  });\n}\n\nlikeButton.forEach(btn => {\n  btn.addEventListener(\"click\", () => {\n    if (loggedIn && currentVideoId !== \"none\") {\n      liked = !liked;\n      updateLiked();\n      updateLikedButton(liked);\n    }\n  });\n});\n\nfunction updateLiked() {\n  fetch(\"/like\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      videoId: currentVideoId\n    })\n  }).then(response => {}).catch(error => {\n    console.error(\"The current music like request encountered an error during processing\", error);\n  });\n}\n\nfunction checkLiked() {\n  fetch('/checkLiked', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      currentVideoId\n    })\n  }).then(response => response.json()).then(data => {\n    const {\n      isLiked\n    } = data;\n    liked = isLiked;\n    updateLikedButton(liked);\n  }).catch(error => {\n    console.error('Error occured: ', error);\n  });\n}\n\nwindow.addToLibrary = playlistId => {\n  if (currentVideoId !== \"none\") {\n    fetch('/addToPlaylist', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        playlistId,\n        currentVideoId\n      })\n    }).then(response => response.json()).catch(error => {\n      console.error('Error occured: ', error);\n    });\n    viewLibrary.classList.add(\"hidden\");\n    playlistAlarm();\n  } else {\n    alert('Please play a song');\n  }\n};\n\nwindow.createPlaylist = event => {\n  const playlistInput = document.querySelector(\".library-title.add input\");\n  const name = playlistInput.value;\n  fetch(\"/createPlaylist\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      currentVideoId\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.message === 'Playlist created successfully') {\n      reloadLibrary();\n    } else {\n      console.log('Failed to create a playlist');\n    }\n  }).catch(error => {\n    console.log('Error:', error);\n  });\n  playlistInput.value = \"\";\n};\n\nfunction reloadLibrary() {\n  fetch(\"/library\").then(response => response.text()).then(html => {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, \"text/html\");\n    const newLibraryContent = doc.querySelector(\".view-library\");\n    const currentLibrary = document.querySelector(\".view-library\");\n    currentLibrary.innerHTML = newLibraryContent.innerHTML;\n  }).catch(error => {\n    console.error(error);\n  });\n}\n\nwindow.playlistInputHandler = () => {\n  const playlistTitle = document.querySelector(\".library-title.add span\");\n  const playlistInput = document.querySelector(\".library-title.add input\");\n  const createBtn = document.querySelector(\".createBtn\");\n  playlistTitle.classList.add(\"hidden\");\n  playlistInput.classList.remove(\"hidden\");\n  createBtn.classList.remove(\"hidden\");\n  playlistInput.focus();\n};\n\nconst likeWraps = document.querySelectorAll(\".like-wrap\");\nconst viewWraps = document.querySelectorAll(\".view-wrap\");\nlikeWraps.forEach(wrap => {\n  const tooltip = wrap.querySelector(\".tooltip\");\n  wrap.addEventListener(\"click\", () => {\n    if (!loggedIn) {\n      tooltip.textContent = \"Please sign in\";\n      tooltip.classList.add(\"show\");\n      setTimeout(function () {\n        tooltip.classList.remove(\"show\");\n      }, 2000);\n    } else if (loggedIn && !currentVideoId) {\n      tooltip.textContent = \"Please select a song\";\n      tooltip.classList.add(\"show\");\n      setTimeout(function () {\n        tooltip.classList.remove(\"show\");\n      }, 2000);\n    }\n  });\n});\nviewWraps.forEach(wrap => {\n  const tooltip = wrap.querySelector(\".tooltip\");\n  wrap.addEventListener(\"mouseover\", () => {\n    tooltip.classList.remove(\"hidden\");\n  });\n  wrap.addEventListener(\"mouseout\", () => {\n    tooltip.classList.add(\"hidden\");\n  });\n});\naddToLibraryButton.forEach(btn => {\n  btn.addEventListener('click', function () {\n    if (loggedIn) {\n      viewLibrary.classList.toggle(\"hidden\");\n    } else {\n      alert(\"Please sign in\");\n    }\n  });\n});\ndocument.addEventListener(\"click\", function (event) {\n  if (!viewLibrary.contains(event.target) & !Array.from(addToLibraryButton).some(function (button) {\n    return button.contains(event.target);\n  })) {\n    viewLibrary.classList.add(\"hidden\");\n    playlistTitle.classList.remove(\"hidden\");\n    playlistInput.classList.add(\"hidden\");\n    createBtn.classList.add(\"hidden\");\n    playlistInput.value = \"\";\n  }\n\n  if (!viewLibrary.classList.contains(\"hidden\") && viewLibrary.contains(event.target) && !playlistTitleWrapper.contains(event.target) && !createBtn.contains(event.target)) {\n    playlistTitle.classList.remove(\"hidden\");\n    playlistInput.classList.add(\"hidden\");\n    createBtn.classList.add(\"hidden\");\n    playlistInput.value = \"\";\n  }\n});\n\nwindow.deleteFromPlaylist = (playlistId, videoId) => {\n  fetch(\"/deleteFromPlaylist\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      playlistId,\n      videoId\n    })\n  }).then(response => response.json()).catch(error => {\n    console.log('Error:', error);\n  });\n  fetch(`/playlist/${playlistId}`).then(response => response.text()).then(html => {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, \"text/html\");\n    const content = doc.querySelector(\"main\");\n    const current = document.querySelector(\"main\");\n    current.innerHTML = content.innerHTML;\n  }).catch(error => {\n    console.error(error);\n  });\n};\n\nwindow.deletePlaylist = playlistId => {\n  fetch(\"/deletePlaylist\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      playlistId\n    })\n  }).then(response => response.json()).catch(error => {\n    console.log('Error:', error);\n  });\n  fetch(`/library`).then(response => response.text()).then(html => {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, \"text/html\");\n    const content = doc.querySelector(\"main\");\n    const current = document.querySelector(\"main\");\n    current.innerHTML = content.innerHTML;\n  }).catch(error => {\n    console.error(error);\n  });\n  reloadLibrary();\n};\n\nwindow.shakingCovers = () => {\n  const editBtn = document.querySelector(\".edit-library\");\n  const libraryCovers = document.querySelectorAll(\"#library .cover-wrapper\");\n  const deleteBtns = document.querySelectorAll(\".deleteBtn\");\n  isEditMode = !isEditMode;\n\n  if (isEditMode) {\n    editBtn.textContent = \"Done\";\n    deleteBtns.forEach(btn => {\n      btn.classList.remove(\"hidden\");\n    });\n    libraryCovers.forEach(cover => {\n      cover.classList.add(\"shake-animation\");\n    });\n  } else {\n    editBtn.textContent = \"Edit\";\n    deleteBtns.forEach(btn => {\n      btn.classList.add(\"hidden\");\n    });\n    libraryCovers.forEach(cover => {\n      cover.classList.remove(\"shake-animation\");\n    });\n  }\n};\n\nwindow.showDeleteAccount = () => {\n  const profile = document.querySelector(\"#profile\");\n  const account = document.querySelector(\"#deleteAccount\");\n  profile.classList.add(\"hidden\");\n  account.classList.remove(\"hidden\");\n};\n\nwindow.noButton = () => {\n  const profile = document.querySelector(\"#profile\");\n  const account = document.querySelector(\"#deleteAccount\");\n  profile.classList.remove(\"hidden\");\n  account.classList.add(\"hidden\");\n};\n\nwindow.deleteAccount = () => {\n  fetch(\"/deleteAccount\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response.json()).then(data => {\n    window.location.href = \"/\";\n  }).catch(error => {\n    console.log('Error:', error);\n  });\n};\n\nwindow.registerHandler = event => {\n  event.preventDefault();\n  const email = document.querySelector('input[name=\"email\"]').value;\n  const password = document.querySelector('input[name=\"password\"]').value;\n  const verification = document.querySelector('input[name=\"verification\"]').value;\n  const username = document.querySelector('input[name=\"username\"]').value;\n  let errorMessage = '';\n\n  if (password.length < 6) {\n    errorMessage = `Password must be at least 6 characters long.`;\n  } else if (password !== verification) {\n    errorMessage = 'Password and verification password do not match.';\n  }\n\n  const errorElement = document.querySelector('.error');\n  errorElement.textContent = errorMessage;\n\n  if (errorMessage) {\n    return;\n  }\n\n  fetch(\"/signup\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password,\n      username\n    })\n  }).then(response => {\n    if (response.ok) {\n      window.location.href = \"/profile\";\n      return response.json();\n    } else if (response.status === 409) {\n      errorMessage = 'Email already exitsts';\n      errorElement = document.querySelector('.error');\n      errorElement.textContent = error.message;\n    } else {\n      throw new Error('Failed to sign up');\n    }\n  }).catch(error => {});\n};\n\n//# sourceURL=webpack://romantik/./src/client/js/main.js?");

/***/ }),

/***/ "./src/client/scss/library.scss":
/*!**************************************!*\
  !*** ./src/client/scss/library.scss ***!
  \**************************************/
/***/ (() => {

"use strict";
eval("// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://romantik/./src/client/scss/library.scss?");

/***/ }),

/***/ "./src/client/scss/player.scss":
/*!*************************************!*\
  !*** ./src/client/scss/player.scss ***!
  \*************************************/
/***/ (() => {

"use strict";
eval("// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://romantik/./src/client/scss/player.scss?");

/***/ }),

/***/ "./src/client/scss/playlist.scss":
/*!***************************************!*\
  !*** ./src/client/scss/playlist.scss ***!
  \***************************************/
/***/ (() => {

"use strict";
eval("// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://romantik/./src/client/scss/playlist.scss?");

/***/ }),

/***/ "./src/client/scss/profile.scss":
/*!**************************************!*\
  !*** ./src/client/scss/profile.scss ***!
  \**************************************/
/***/ (() => {

"use strict";
eval("// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://romantik/./src/client/scss/profile.scss?");

/***/ }),

/***/ "./src/client/scss/search.scss":
/*!*************************************!*\
  !*** ./src/client/scss/search.scss ***!
  \*************************************/
/***/ (() => {

"use strict";
eval("// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://romantik/./src/client/scss/search.scss?");

/***/ }),

/***/ "./src/client/scss/styles.scss":
/*!*************************************!*\
  !*** ./src/client/scss/styles.scss ***!
  \*************************************/
/***/ (() => {

"use strict";
eval("// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://romantik/./src/client/scss/styles.scss?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/client/js/main.js");
/******/ 	
/******/ })()
;